name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Windows-Build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update Git Submodules
        run: git submodule update --init --recursive

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Windows-Build
          path: ${{github.workspace}}/build/bin
  Linux-Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update Git Submodules
        run: git submodule update --init --recursive
      
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ clang libc++-dev libc++abi-dev cmake ninja-build libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev libxrandr-dev libxinerama-dev

  

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Linux-Build
          path: ${{github.workspace}}/build/bin
  Macos-build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update Git Submodules
        run: git submodule update --init --recursive

      - name: Configure CMake - Silicone
        run: cmake -B ${{github.workspace}}/build-silicone -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_OS_ARCHITECTURES=arm64

      - name: Build - Silicone
        run: cmake --build ${{github.workspace}}/build-silicone --config ${{env.BUILD_TYPE}}

      - name: Test - Silicone
        working-directory: ${{github.workspace}}/build-silicone
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Configure CMake - Intel
        run: cmake -B ${{github.workspace}}/build-intel -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_OS_ARCHITECTURES=x86_64

      - name: Build - Intel
        run: cmake --build ${{github.workspace}}/build-intel --config ${{env.BUILD_TYPE}}

      - name: Test - Intel
        working-directory: ${{github.workspace}}/build-intel
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Merge Artifacts
        run: |
          mkdir -p ${{github.workspace}}/build/bin
    
          if [[ -f ${{github.workspace}}/build-silicone/bin/Eat-the-Mushroom ]]; then
            cp ${{github.workspace}}/build-silicone/bin/Eat-the-Mushroom ${{github.workspace}}/build/bin/Eat-the-Mushroom
          elif [[ -f ${{github.workspace}}/build-intel/bin/Eat-the-Mushroom ]]; then
            cp ${{github.workspace}}/build-intel/bin/Eat-the-Mushroom ${{github.workspace}}/build/bin/Eat-the-Mushroom
          else
            echo "No executable found for merging."
          exit 1
          fi
          
          cp -R ${{github.workspace}}/font ${{github.workspace}}/build/bin/font
          cp -R ${{github.workspace}}/res ${{github.workspace}}/build/bin/res

      - name: Verify Architecture
        run: |
          architecture=$(file "${{github.workspace}}/build/bin/Eat-the-Mushroom" | grep -o "arm64\|x86_64")
          if [[ "$architecture" == "arm64" ]]; then
            echo "Executable architecture: ARM64"
          elif [[ "$architecture" == "x86_64" ]]; then
            echo "Executable architecture: x86_64"
          else
            echo "Unable to determine executable architecture"
            exit 1
          fi
      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Macos-Build
          path: ${{github.workspace}}/build/bin
